{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';const initialState={users:[],loading:false,error:null,search:{name:'',username:'',email:'',phone:''}};// Ось тут використовуємо fetch замість axios\nexport const fetchUsers=createAsyncThunk('users/fetchUsers',async()=>{const response=await fetch('https://jsonplaceholder.typicode.com/users');if(!response.ok){throw new Error('Не вдалося завантажити дані');}return response.json();});const userSlice=createSlice({name:'users',initialState,reducers:{setSearchTerm(state,action){state.search={...state.search,...action.payload};}},extraReducers:builder=>{builder.addCase(fetchUsers.pending,state=>{state.loading=true;state.error=null;}).addCase(fetchUsers.fulfilled,(state,action)=>{state.loading=false;state.users=action.payload;}).addCase(fetchUsers.rejected,(state,action)=>{state.loading=false;state.error=action.error.message||'Помилка при завантаженні користувачів';});}});export const{setSearchTerm}=userSlice.actions;export default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","users","loading","error","search","name","username","email","phone","fetchUsers","response","fetch","ok","Error","json","userSlice","reducers","setSearchTerm","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["/Users/maxympetlyak/Desktop/REACT/user_managment/src/redux/userSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\ninterface User {\n    id: number;\n    name: string;\n    username: string;\n    email: string;\n    phone: string;\n}\n\ninterface UserState {\n    users: User[];\n    loading: boolean;\n    error: string | null;\n    search: {\n        name: string;\n        username: string;\n        email: string;\n        phone: string;\n    };\n}\n\nconst initialState: UserState = {\n    users: [],\n    loading: false,\n    error: null,\n    search: {\n        name: '',\n        username: '',\n        email: '',\n        phone: '',\n    },\n};\n\n// Ось тут використовуємо fetch замість axios\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    if (!response.ok) {\n        throw new Error('Не вдалося завантажити дані');\n    }\n    return response.json();\n});\n\nconst userSlice = createSlice({\n    name: 'users',\n    initialState,\n    reducers: {\n        setSearchTerm(state, action) {\n            state.search = { ...state.search, ...action.payload };\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchUsers.pending, (state) => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addCase(fetchUsers.fulfilled, (state, action) => {\n                state.loading = false;\n                state.users = action.payload;\n            })\n            .addCase(fetchUsers.rejected, (state, action) => {\n                state.loading = false;\n                state.error = action.error.message || 'Помилка при завантаженні користувачів';\n            });\n    },\n});\n\nexport const { setSearchTerm } = userSlice.actions;\nexport default userSlice.reducer;\n\n\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,gBAAgB,KAAQ,kBAAkB,CAsBhE,KAAM,CAAAC,YAAuB,CAAG,CAC5BC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IAAI,CACXC,MAAM,CAAE,CACJC,IAAI,CAAE,EAAE,CACRC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EACX,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,UAAU,CAAGV,gBAAgB,CAAC,kBAAkB,CAAE,SAAY,CACvE,KAAM,CAAAW,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,4CAA4C,CAAC,CAC1E,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAClD,CACA,MAAO,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC1B,CAAC,CAAC,CAEF,KAAM,CAAAC,SAAS,CAAGjB,WAAW,CAAC,CAC1BO,IAAI,CAAE,OAAO,CACbL,YAAY,CACZgB,QAAQ,CAAE,CACNC,aAAaA,CAACC,KAAK,CAAEC,MAAM,CAAE,CACzBD,KAAK,CAACd,MAAM,CAAG,CAAE,GAAGc,KAAK,CAACd,MAAM,CAAE,GAAGe,MAAM,CAACC,OAAQ,CAAC,CACzD,CACJ,CAAC,CACDC,aAAa,CAAGC,OAAO,EAAK,CACxBA,OAAO,CACFC,OAAO,CAACd,UAAU,CAACe,OAAO,CAAGN,KAAK,EAAK,CACpCA,KAAK,CAAChB,OAAO,CAAG,IAAI,CACpBgB,KAAK,CAACf,KAAK,CAAG,IAAI,CACtB,CAAC,CAAC,CACDoB,OAAO,CAACd,UAAU,CAACgB,SAAS,CAAE,CAACP,KAAK,CAAEC,MAAM,GAAK,CAC9CD,KAAK,CAAChB,OAAO,CAAG,KAAK,CACrBgB,KAAK,CAACjB,KAAK,CAAGkB,MAAM,CAACC,OAAO,CAChC,CAAC,CAAC,CACDG,OAAO,CAACd,UAAU,CAACiB,QAAQ,CAAE,CAACR,KAAK,CAAEC,MAAM,GAAK,CAC7CD,KAAK,CAAChB,OAAO,CAAG,KAAK,CACrBgB,KAAK,CAACf,KAAK,CAAGgB,MAAM,CAAChB,KAAK,CAACwB,OAAO,EAAI,uCAAuC,CACjF,CAAC,CAAC,CACV,CACJ,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEV,aAAc,CAAC,CAAGF,SAAS,CAACa,OAAO,CAClD,cAAe,CAAAb,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}